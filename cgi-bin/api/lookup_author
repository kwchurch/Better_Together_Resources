#!/usr/bin/env python3 

# Import modules for CGI handling 
import cgi, cgitb
import ast,json,requests,os,sys
import numpy as np

form = cgi.FieldStorage() 

# secrets that we do not want to share
fn = os.environ["HOME"] + '/.secrets.json'

secrets = {}

if os.path.exists(fn):
    with open(fn, 'r') as fd:
        secrets = ast.literal_eval(fd.read().rstrip())

def s2_apikey():
    if 's2_apikeys' in secrets: 
        return secrets['s2_apikeys'][0]

def s2_header():
    k = s2_apikey()
    if k is None: return {}
    else: return {"x-api-key": s2_apikey()}

print('Access-Control-Allow-Origin: *\r\nContent-type: application/json\r\n\r\n')

def usage():
    j = {'usage': 'args: id (required), help, limit, fields',
         'id': form.getvalue('id'),
         'limit': form.getvalue('limit'),
         'fields': form.getvalue('fields'),
         'help': form.getvalue('help')}
    print(json.dumps(j))
    sys.exit()

def cites_compare(r):
    return int(r['citationCount'])

def do_author(id, fields, limit):
    cmd = 'https://api.semanticscholar.org/graph/v1/author/' + id
    if not fields is None:
        cmd = cmd + '?fields=' + fields
    if not limit is None:
        cmd = cmd + '&limit=' + int(limit)
    return requests.get(cmd, headers=s2_header()).json()

if not form.getvalue('help') is None: usage()
if form.getvalue('id') is None: usage()
if not form.getvalue('help') is None: usage()

print(json.dumps(do_author(form.getvalue('id'), form.getvalue('fields'), form.getvalue('limit'))))

